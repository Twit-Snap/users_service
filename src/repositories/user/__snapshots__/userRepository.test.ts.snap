// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserRepository create should create a new SSO user: Created user result 1`] = `
{
  "email": "new@example.com",
  "id": 1,
  "username": "newuser",
}
`;

exports[`UserRepository create should create a new SSO user: Interpolated SQL query 1`] = `
"
      INSERT INTO users (username, email, name, lastname, birthdate, password, profile_picture, sso_uid, provider_id)
      VALUES ('newuser', 'new@example.com', 'New', 'User', '2000-01-01T00:00:00.000Z', undefined, 'https://example.com/picture.jpg', 'sso123oiebf8q782783', 'google.com')
      RETURNING id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate"
    "
`;

exports[`UserRepository create should create a new SSO user: SQL query 1`] = `
[
  "
      INSERT INTO users (username, email, name, lastname, birthdate, password, profile_picture, sso_uid, provider_id)
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
      RETURNING id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate"
    ",
  [
    "newuser",
    "new@example.com",
    "New",
    "User",
    "2000-01-01T00:00:00.000Z",
    undefined,
    "https://example.com/picture.jpg",
    "sso123oiebf8q782783",
    "google.com",
  ],
]
`;

exports[`UserRepository create should create a new user: Created user result 1`] = `
{
  "email": "new@example.com",
  "id": 1,
  "username": "newuser",
}
`;

exports[`UserRepository create should create a new user: Interpolated SQL query 1`] = `
"
      INSERT INTO users (username, email, name, lastname, birthdate, password, profile_picture, sso_uid, provider_id)
      VALUES ('newuser', 'new@example.com', 'New', 'User', '2000-01-01T00:00:00.000Z', 'password123', undefined, undefined, undefined)
      RETURNING id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate"
    "
`;

exports[`UserRepository create should create a new user: SQL query 1`] = `
[
  "
      INSERT INTO users (username, email, name, lastname, birthdate, password, profile_picture, sso_uid, provider_id)
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
      RETURNING id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate"
    ",
  [
    "newuser",
    "new@example.com",
    "New",
    "User",
    "2000-01-01T00:00:00.000Z",
    "password123",
    undefined,
    undefined,
    undefined,
  ],
]
`;

exports[`UserRepository createFollow should create a follow successfully 1`] = `
{
  "createdAt": 2023-01-01T00:00:00.000Z,
  "followedId": 2,
  "userId": 1,
}
`;

exports[`UserRepository createFollow should create a follow successfully: Interpolated SQL query 1`] = `
"
      INSERT INTO follows (userId, followedId)
      VALUES (1, 2)
      RETURNING userId, followedId, created_at AS "createdAt"
    "
`;

exports[`UserRepository createFollow should throw EntityAlreadyExistsError when follow already exists 1`] = `"Follow already exists"`;

exports[`UserRepository createFollow should throw EntityAlreadyExistsError when follow already exists: Interpolated SQL query 1`] = `
"
      INSERT INTO follows (userId, followedId)
      VALUES (1, 2)
      RETURNING userId, followedId, created_at AS "createdAt"
    "
`;

exports[`UserRepository deleteFollow should delete a follow successfully: Interpolated SQL query 1`] = `
"
      DELETE FROM follows
      WHERE userId = 1 AND followedId = 2
    "
`;

exports[`UserRepository findByEmailOrUsername should find user by email or username: Interpolated SQL query 1`] = `"SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", password, is_blocked AS "isBlocked" FROM users WHERE email = 'testuser' OR username = 'testuser'"`;

exports[`UserRepository findByEmailOrUsername should find user by email or username: SQL query 1`] = `
[
  "SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", password, is_blocked AS "isBlocked" FROM users WHERE email = $1 OR username = $1",
  [
    "testuser",
  ],
]
`;

exports[`UserRepository findByEmailOrUsername should find user by email or username: User result 1`] = `
{
  "email": "test@example.com",
  "id": 1,
  "username": "testuser",
}
`;

exports[`UserRepository findByEmailOrUsername should return null when user not found: Interpolated SQL query 1`] = `"SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", password, is_blocked AS "isBlocked" FROM users WHERE email = 'nonexistent' OR username = 'nonexistent'"`;

exports[`UserRepository findByEmailOrUsername should return null when user not found: SQL query 1`] = `
[
  "SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", password, is_blocked AS "isBlocked" FROM users WHERE email = $1 OR username = $1",
  [
    "nonexistent",
  ],
]
`;

exports[`UserRepository findByEmailOrUsername should return null when user not found: User result 1`] = `null`;

exports[`UserRepository get should get user by id: Interpolated SQL query 1`] = `"SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate" FROM users WHERE id = 1"`;

exports[`UserRepository get should get user by id: SQL query 1`] = `
[
  "SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate" FROM users WHERE id = $1",
  [
    1,
  ],
]
`;

exports[`UserRepository get should get user by id: User result 1`] = `
{
  "email": "test@example.com",
  "id": 1,
  "username": "testuser",
}
`;

exports[`UserRepository get should return null when user not found: Interpolated SQL query 1`] = `"SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate" FROM users WHERE id = 999"`;

exports[`UserRepository get should return null when user not found: SQL query 1`] = `
[
  "SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate" FROM users WHERE id = $1",
  [
    999,
  ],
]
`;

exports[`UserRepository get should return null when user not found: User result 1`] = `null`;

exports[`UserRepository getByUsername should get user by username: Interpolated SQL query 1`] = `"SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked" FROM users WHERE username = 'testuser'"`;

exports[`UserRepository getByUsername should get user by username: SQL query 1`] = `
[
  "SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked" FROM users WHERE username = $1",
  [
    "testuser",
  ],
]
`;

exports[`UserRepository getByUsername should get user by username: User result 1`] = `
{
  "email": "test@example.com",
  "username": "testuser",
}
`;

exports[`UserRepository getByUsername should return null when user not found: Interpolated SQL query 1`] = `"SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked" FROM users WHERE username = 'nonexistent'"`;

exports[`UserRepository getByUsername should return null when user not found: SQL query 1`] = `
[
  "SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked" FROM users WHERE username = $1",
  [
    "nonexistent",
  ],
]
`;

exports[`UserRepository getByUsername should return null when user not found: User result 1`] = `null`;

exports[`UserRepository getFollow should get a follow successfully 1`] = `
{
  "createdAt": 2023-01-01T00:00:00.000Z,
  "followedId": 2,
  "userId": 1,
}
`;

exports[`UserRepository getFollow should get a follow successfully: Interpolated SQL query 1`] = `
"
      SELECT userId, followedId, created_at AS "createdAt"
      FROM follows
      WHERE userId = 1 AND followedId = 2
    "
`;

exports[`UserRepository getFollow should return undefined when follow does not exist: Interpolated SQL query 1`] = `
"
      SELECT userId, followedId, created_at AS "createdAt"
      FROM follows
      WHERE userId = 1 AND followedId = 2
    "
`;

exports[`UserRepository getFollows gets followers with all params: Interpolated SQL query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = 1 AND follows.created_at < '2024-01-01' AND (username ILIKE '%test%' OR name ILIKE '%test%')
      ORDER BY follows.created_at DESC
       LIMIT 1
    "
`;

exports[`UserRepository getFollows gets followers with all params: query params 1`] = `
[
  1,
  "%test%",
  "2024-01-01",
  1,
]
`;

exports[`UserRepository getFollows gets followers with all params: result 1`] = `
[
  {
    "followCreatedAt": 2024-01-01T00:00:00.000Z,
    "id": 2,
    "name": "Test User 1",
    "username": "test_user1",
  },
]
`;

exports[`UserRepository getFollows gets followers with all params: sql query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = $1 AND follows.created_at < $3 AND (username ILIKE $2 OR name ILIKE $2)
      ORDER BY follows.created_at DESC
       LIMIT $4
    "
`;

exports[`UserRepository getFollows gets followers with createdAt param: Interpolated SQL query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = 1 AND follows.created_at < '2024-01-01' AND (username ILIKE '%test%' OR name ILIKE '%test%')
      ORDER BY follows.created_at DESC
      
    "
`;

exports[`UserRepository getFollows gets followers with createdAt param: query params 1`] = `
[
  1,
  "%test%",
  "2024-01-01",
]
`;

exports[`UserRepository getFollows gets followers with createdAt param: result 1`] = `
[
  {
    "followCreatedAt": 2024-01-01T00:00:00.000Z,
    "id": 2,
    "name": "Test User 1",
    "username": "test_user1",
  },
]
`;

exports[`UserRepository getFollows gets followers with createdAt param: sql query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = $1 AND follows.created_at < $3 AND (username ILIKE $2 OR name ILIKE $2)
      ORDER BY follows.created_at DESC
      
    "
`;

exports[`UserRepository getFollows gets followers with limit param: Interpolated SQL query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = 1 AND (username ILIKE '%test%' OR name ILIKE '%test%')
      ORDER BY follows.created_at DESC
       LIMIT 1
    "
`;

exports[`UserRepository getFollows gets followers with limit param: query params 1`] = `
[
  1,
  "%test%",
  1,
]
`;

exports[`UserRepository getFollows gets followers with limit param: result 1`] = `
[
  {
    "followCreatedAt": 2024-01-01T00:00:00.000Z,
    "id": 2,
    "name": "Test User 1",
    "username": "test_user1",
  },
]
`;

exports[`UserRepository getFollows gets followers with limit param: sql query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = $1 AND (username ILIKE $2 OR name ILIKE $2)
      ORDER BY follows.created_at DESC
       LIMIT $3
    "
`;

exports[`UserRepository getFollows gets followers without optional params: Interpolated SQL query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = 1 AND (username ILIKE '%test%' OR name ILIKE '%test%')
      ORDER BY follows.created_at DESC
      
    "
`;

exports[`UserRepository getFollows gets followers without optional params: query params 1`] = `
[
  1,
  "%test%",
]
`;

exports[`UserRepository getFollows gets followers without optional params: result 1`] = `
[
  {
    "followCreatedAt": 2024-01-01T00:00:00.000Z,
    "id": 2,
    "name": "Test User 1",
    "username": "test_user1",
  },
  {
    "followCreatedAt": 2024-01-01T00:00:00.000Z,
    "id": 3,
    "name": "Test User 2",
    "username": "test_user2",
  },
]
`;

exports[`UserRepository getFollows gets followers without optional params: sql query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = $1 AND (username ILIKE $2 OR name ILIKE $2)
      ORDER BY follows.created_at DESC
      
    "
`;

exports[`UserRepository getFollows gets following without optional params: Interpolated SQL query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.followedId = users.id
      WHERE userId = 1 AND (username ILIKE '%test%' OR name ILIKE '%test%')
      ORDER BY follows.created_at DESC
      
    "
`;

exports[`UserRepository getFollows gets following without optional params: query params 1`] = `
[
  1,
  "%test%",
]
`;

exports[`UserRepository getFollows gets following without optional params: result 1`] = `
[
  {
    "followCreatedAt": 2024-01-01T00:00:00.000Z,
    "id": 4,
    "name": "Test User 3",
    "username": "test_user3",
  },
  {
    "followCreatedAt": 2024-01-01T00:00:00.000Z,
    "id": 5,
    "name": "Test User 4",
    "username": "test_user4",
  },
]
`;

exports[`UserRepository getFollows gets following without optional params: sql query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.followedId = users.id
      WHERE userId = $1 AND (username ILIKE $2 OR name ILIKE $2)
      ORDER BY follows.created_at DESC
      
    "
`;

exports[`UserRepository getFollows handles database error: Interpolated SQL query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = 1 AND (username ILIKE '%test%' OR name ILIKE '%test%')
      ORDER BY follows.created_at DESC
      
    "
`;

exports[`UserRepository getFollows handles database error: query params 1`] = `
[
  1,
  "%test%",
]
`;

exports[`UserRepository getFollows handles database error: sql query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = $1 AND (username ILIKE $2 OR name ILIKE $2)
      ORDER BY follows.created_at DESC
      
    "
`;

exports[`UserRepository getFollows handles empty result: Interpolated SQL query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = 1 AND (username ILIKE '%nonexistent%' OR name ILIKE '%nonexistent%')
      ORDER BY follows.created_at DESC
      
    "
`;

exports[`UserRepository getFollows handles empty result: query params 1`] = `
[
  1,
  "%nonexistent%",
]
`;

exports[`UserRepository getFollows handles empty result: result 1`] = `[]`;

exports[`UserRepository getFollows handles empty result: sql query 1`] = `
"
      SELECT id, username, name, follows.created_at AS "followCreatedAt"
      FROM follows
      INNER JOIN users ON follows.userId = users.id
      WHERE followedId = $1 AND (username ILIKE $2 OR name ILIKE $2)
      ORDER BY follows.created_at DESC
      
    "
`;

exports[`UserRepository getList gets users with all params: Interpolated SQL query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE '%test%' OR name ILIKE '%test%') AND created_at < '2024-01-01'::timestamptz 
    ORDER BY created_at DESC
     LIMIT 1 OFFSET 0"
`;

exports[`UserRepository getList gets users with all params: query params 1`] = `
[
  "%test%",
  "2024-01-01",
  1,
  0,
]
`;

exports[`UserRepository getList gets users with all params: result 1`] = `
[
  {
    "created_at": 2024-01-01T00:00:00.000Z,
    "id": 1,
    "name": "Test User",
    "updated_at": 2024-01-01T00:00:00.000Z,
    "username": "test_user",
  },
]
`;

exports[`UserRepository getList gets users with all params: sql query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE $1 OR name ILIKE $1) AND created_at < $2::timestamptz 
    ORDER BY created_at DESC
     LIMIT $3 OFFSET $4"
`;

exports[`UserRepository getList gets users with createdAt param: Interpolated SQL query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE '%test%' OR name ILIKE '%test%') AND created_at < '2024-01-01'::timestamptz 
    ORDER BY created_at DESC
    "
`;

exports[`UserRepository getList gets users with createdAt param: query params 1`] = `
[
  "%test%",
  "2024-01-01",
]
`;

exports[`UserRepository getList gets users with createdAt param: result 1`] = `
[
  {
    "created_at": 2024-01-01T00:00:00.000Z,
    "id": 1,
    "name": "Test User",
    "updated_at": 2024-01-01T00:00:00.000Z,
    "username": "test_user",
  },
]
`;

exports[`UserRepository getList gets users with createdAt param: sql query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE $1 OR name ILIKE $1) AND created_at < $2::timestamptz 
    ORDER BY created_at DESC
    "
`;

exports[`UserRepository getList gets users with limit param: Interpolated SQL query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE '%test%' OR name ILIKE '%test%')
    ORDER BY created_at DESC
     LIMIT 1 OFFSET 0"
`;

exports[`UserRepository getList gets users with limit param: query params 1`] = `
[
  "%test%",
  1,
  0,
]
`;

exports[`UserRepository getList gets users with limit param: result 1`] = `
[
  {
    "created_at": 2024-01-01T00:00:00.000Z,
    "id": 1,
    "name": "Test User",
    "updated_at": 2024-01-01T00:00:00.000Z,
    "username": "test_user",
  },
]
`;

exports[`UserRepository getList gets users with limit param: sql query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE $1 OR name ILIKE $1)
    ORDER BY created_at DESC
     LIMIT $2 OFFSET $3"
`;

exports[`UserRepository getList gets users without optional params: Interpolated SQL query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE '%test%' OR name ILIKE '%test%')
    ORDER BY created_at DESC
    "
`;

exports[`UserRepository getList gets users without optional params: query params 1`] = `
[
  "%test%",
]
`;

exports[`UserRepository getList gets users without optional params: result 1`] = `
[
  {
    "created_at": 2024-01-01T00:00:00.000Z,
    "id": 1,
    "name": "Test User",
    "updated_at": 2024-01-01T00:00:00.000Z,
    "username": "test_user",
  },
  {
    "created_at": 2024-01-01T00:00:00.000Z,
    "id": 2,
    "name": "Test User",
    "updated_at": 2024-01-01T00:00:00.000Z,
    "username": "test_user2",
  },
]
`;

exports[`UserRepository getList gets users without optional params: sql query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE $1 OR name ILIKE $1)
    ORDER BY created_at DESC
    "
`;

exports[`UserRepository getList handles database error: Interpolated SQL query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE '%test%' OR name ILIKE '%test%')
    ORDER BY created_at DESC
    "
`;

exports[`UserRepository getList handles database error: query params 1`] = `
[
  "%test%",
]
`;

exports[`UserRepository getList handles database error: sql query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE $1 OR name ILIKE $1)
    ORDER BY created_at DESC
    "
`;

exports[`UserRepository getList handles empty result: Interpolated SQL query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE '%nonexistent%' OR name ILIKE '%nonexistent%')
    ORDER BY created_at DESC
    "
`;

exports[`UserRepository getList handles empty result: query params 1`] = `
[
  "%nonexistent%",
]
`;

exports[`UserRepository getList handles empty result: result 1`] = `[]`;

exports[`UserRepository getList handles empty result: sql query 1`] = `
"
    SELECT id, username, email, name, lastname, birthdate, created_at AS "createdAt", sso_uid as "ssoUid", provider_id as "providerId", profile_picture as "profilePicture", is_private AS "isPrivate", is_blocked AS "isBlocked"
    FROM users
    WHERE (username ILIKE $1 OR name ILIKE $1)
    ORDER BY created_at DESC
    "
`;
